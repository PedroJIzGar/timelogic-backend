<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.timelogic</groupId>
    <artifactId>timelogic-backend</artifactId>
    <version>0.1.0-SNAPSHOT</version>
  </parent>

  <artifactId>api-gateway</artifactId>
  <name>api-gateway</name>
  <description>API Gateway for TimeLogic - Spring Cloud Gateway + Firebase</description>

  <dependencies>
    <!-- Gateway (incluye WebFlux) -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-gateway</artifactId>
    </dependency>

    <!-- Eureka client -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
    </dependency>

    <!-- Actuator / observabilidad -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

	<dependency>
	  <groupId>org.projectlombok</groupId>
	  <artifactId>lombok</artifactId>
	  <optional>true</optional>
	</dependency>

    <!-- Firebase Admin SDK -->
    <dependency>
      <groupId>com.google.firebase</groupId>
      <artifactId>firebase-admin</artifactId>
      <version>9.4.1</version>
    </dependency>

	  <!-- Seguridad (necesario para Authentication, SecurityContext, etc.) -->
	  <dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-security</artifactId>
	  </dependency>
	
	  <!-- Si validas JWT (Firebase u otros) en el gateway -->
	  <dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
	  </dependency>

	<!-- JJWT: firmar el JWT interno (runtime) -->
	  <dependency>
	    <groupId>io.jsonwebtoken</groupId>
	    <artifactId>jjwt-api</artifactId>
	    <version>0.12.5</version>
	  </dependency>
	  <dependency>
	    <groupId>io.jsonwebtoken</groupId>
	    <artifactId>jjwt-impl</artifactId>
	    <version>0.12.5</version>
	    <scope>runtime</scope>
	  </dependency>
	  <dependency>
	    <groupId>io.jsonwebtoken</groupId>
	    <artifactId>jjwt-jackson</artifactId>
	    <version>0.12.5</version>
	    <scope>runtime</scope>
	  </dependency>
	  
    <!-- =================== TEST =================== -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- WireMock para stubear backends en tests -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-contract-wiremock</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
